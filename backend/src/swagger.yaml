openapi: 3.0.0
info:
  title: Car Space Renting Management API
  version: 1.0.0
  description: API documentation for the Car Space Renting Management System
servers:
  - url: http://localhost:8888
    description: Local server

tags:
  - name: User/Auth
    description: Endpoints for user authentication and registration
  - name: Listings
    description: Endpoints for managing car space listings
  - name: Bookings
    description: Endpoints for managing bookings
  - name: User/Detail
    description: Endpoints for managing user details
  - name: User/Vehicle
    description: Endpoints for managing user vehicles

paths:
  /user/auth/login:
    post:
      tags:
        - User/Auth
      summary: User login
      description: Authenticates a user using email, password, and role.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        "200":
          description: Successful login
        "400":
          description: Invalid credentials

  /user/auth/register:
    post:
      tags:
        - User/Auth
      summary: User registration
      description: Registers a new user with email, password, and role.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                passwordConfirmed:
                  type: string
                role:
                  type: string
      responses:
        "200":
          description: Successful registration
        "400":
          description: Error during registration

  /user/auth/logout:
    post:
      tags:
        - User/Auth
      summary: User logout
      description: Logs out the current user.
      responses:
        "200":
          description: Logout successful
        "400":
          description: Error during logout

  /listings/new:
    post:
      tags:
        - Listings
      summary: Create a new listing
      description: Creates a new car space listing.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                address:
                  type: string
                pricePerHour:
                  type: number
                pricePerDay:
                  type: number
                thumbnail:
                  type: string
                metadata:
                  type: object
                  properties:
                    host_email:
                      type: string
                    availableFrom:
                      type: string
                      example: "2024-09-01T08:00:00Z"
                    availableUntil:
                      type: string
                      example: "2024-12-01T08:00:00Z"
      responses:
        "200":
          description: Listing created successfully
        "400":
          description: Error creating listing

  /listings/all:
    get:
      tags:
        - Listings
      summary: Get all listings
      description: Retrieves all car space listings.
      responses:
        "200":
          description: A list of all listings
        "400":
          description: Error fetching listings

  /listings/liked:
    get:
      tags:
        - Listings
      summary: Get all liked listings
      description: Retrieves all liked car space listings.
      responses:
        "200":
          description: A list of all liked listings
        "400":
          description: Error fetching listings

  /listings/{listingId}/update:
    put:
      tags:
        - Listings
      summary: Update a listing
      description: Updates the details of an existing listing.
      parameters:
        - in: path
          name: listingId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                address:
                  type: string
                pricePerHour:
                  type: number
                pricePerDay:
                  type: number
                thumbnail:
                  type: string
                metadata:
                  type: object
      responses:
        "200":
          description: Listing updated successfully
        "400":
          description: Error updating listing

  /listings/{listingId}/publish:
    put:
      tags:
        - Listings
      summary: Publish a listing
      description: Publishes a car space listing.
      parameters:
        - in: path
          name: listingId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Listing published successfully
        "400":
          description: Error publishing listing

  /listings/{listingId}/unpublish:
    put:
      tags:
        - Listings
      summary: Unpublish a listing
      description: Unpublishes a car space listing.
      parameters:
        - in: path
          name: listingId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Listing unpublished successfully
        "400":
          description: Error unpublishing listing

  /listings/{listingId}/like:
    put:
      tags:
        - Listings
      summary: like a listing
      description: likes a car space listing.
      parameters:
        - in: path
          name: listingId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Listing liked successfully
        "400":
          description: Error liking listing

  /listings/{listingId}/unlike:
    put:
      tags:
        - Listings
      summary: unlike a listing
      description: unlikes a car space listing.
      parameters:
        - in: path
          name: listingId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Listing unliked successfully
        "400":
          description: Error unliking listing

  /listings/{listingId}/review:
    post:
      tags:
        - Listings
      summary: Add a review to a listing
      description: Add a review for a specific listing by ID.
      parameters:
        - in: path
          name: listingId
          required: true
          schema:
            type: string
            description: The ID of the listing to review
      requestBody:
        description: Review details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                review:
                  type: string
                  example: Great parking spot!
      responses:
        "200":
          description: Review added successfully
        "400":
          description: Error adding review

  /bookings/new:
    post:
      tags:
        - Bookings
      summary: Create a new booking
      description: Books a car space for a given time period.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                startTime:
                  type: string
                endTime:
                  type: string
                listingId:
                  type: string
      responses:
        "200":
          description: Booking created successfully
        "400":
          description: Error creating booking

  /bookings/all:
    get:
      tags:
        - Bookings
      summary: Get all bookings
      description: Retrieves all bookings.
      responses:
        "200":
          description: A list of all bookings
        "400":
          description: Error fetching bookings

  /bookings/{id}:
    delete:
      tags:
        - Bookings
      summary: Delete a booking
      description: Deletes a booking by ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Booking deleted successfully
        "400":
          description: Error deleting booking

  /user/details:
    get:
      tags:
        - User/Detail
      summary: Get user details
      description: Retrieves the personal details of the logged-in user.
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  address:
                    type: string
        "400":
          description: Error fetching user details

    put:
      tags:
        - User/Detail
      summary: Update user details
      description: Updates the userâ€™s personal information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                cardNumber:
                  type: string
                expiryDate:
                  type: string
                cvv:
                  type: string
      responses:
        "200":
          description: User details updated successfully
        "400":
          description: Error updating user details

  /user/vehicles/new:
    post:
      tags:
        - User/Vehicle
      summary: Add a new vehicle
      description: Adds a new vehicle for the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                make:
                  type: string
                model:
                  type: string
                year:
                  type: string
                licensePlate:
                  type: string
      responses:
        "200":
          description: Vehicle added successfully
        "400":
          description: Error adding vehicle

  /user/vehicles:
    get:
      tags:
        - User/Vehicle
      summary: Get user vehicles
      description: Retrieves all vehicles owned by the user.
      responses:
        "200":
          description: A list of all vehicles
        "400":
          description: Error fetching vehicles

  /user/vehicles/{id}:
    delete:
      tags:
        - User/Vehicle
      summary: Delete a vehicle
      description: Deletes a userâ€™s vehicle by ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Vehicle deleted successfully
        "400":
          description: Error deleting vehicle
